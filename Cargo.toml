[package]
name = "dev-env-manager"
version = "0.1.0"
edition = "2021"
authors = ["Dev Environment Manager Team"]
description = "A comprehensive development environment management system"

[dependencies]
# Core dependencies
tokio = { version = "1.32", features = ["full"] }
anyhow = { version = "1.0", features = ["backtrace"] }
thiserror = "1.0"
async-trait = "0.1"
futures = "0.3"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
secrecy = { version = "0.8", features = ["serde", "alloc"] }
base64 = "0.21"
chrono = { version = "0.4", features = ["serde", "clock"] }
time = { version = "0.3", features = ["serde"] }
rand = "0.8"
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true }
directories = "5.0"
hyper = { version = "0.14", features = ["full"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
aes-gcm = "0.10"
generic-array = "0.14"
lazy_static = "1.4"
maxminddb = "0.23"
env_logger = "0.10"
qrcode = "0.12"


# Docker
bollard = { version = "0.14", optional = true }

# Database
sqlx = { version = "0.7", features = ["runtime-tokio-native-tls", "macros", "sqlite"], optional = true }

# HTTP Client
reqwest = { version = "0.11", features = ["json"] }

# CLI and Interactive UI
clap = { version = "4.4.18", features = ["derive", "env"] }
dialoguer = "0.11.0"
indicatif = "0.17.7"
console = "0.15.7"
tui = { version = "0.19.0", features = ["crossterm"], optional = true }
crossterm = { version = "0.27.0", optional = true }

# Async runtime and utilities
tokio-util = { version = "0.7", features = ["full"] }

# Configuration and serialization
toml = "0.8.8"
json5 = "0.4.1"
jsonschema = "0.17.1"
json-patch = "0.3.0"
serde_yaml = "0.9.25"
dotenv = "0.15"
config = "0.13"

# Storage and Metrics
rusqlite = { version = "0.30.0", features = ["bundled"] }
metrics = { version = "0.21", optional = true }
metrics-exporter-prometheus = { version = "0.12", optional = true }
tokio-postgres = { version = "0.7", optional = true }
prometheus = { version = "0.13", optional = true }

# Container and orchestration
shiplift = { version = "0.7", default-features = false, optional = true }
oci-spec = { version = "0.6", optional = true }

# Environment and system
which = { version = "4.4" }
home = { version = "0.5" }
sysinfo = "0.30.5"
users = { version = "0.11", optional = true }
winapi = { version = "0.3.9", features = ["winerror"] }

# Security and authentication
argon2 = "0.5"
jwt = "0.16"
sha2 = "0.10"

# Networking and HTTP
hyper-tls = "0.5"
url = "2.4"

# Rate limiting
governor = "0.6"
nonzero_ext = "0.3"

# Email
lettre = { version = "0.11", features = ["tokio1", "tokio1-native-tls", "builder"] }
email_address = "0.2"

# Additional dependencies
dirs = "5.0"
futures-util = "0.3"
ignore = "0.4"
totp-rs = "5.0"
base32 = "0.4"

[features]
default = ["containers", "monitoring", "distributed-tracing"]
ui = ["dep:tui", "dep:crossterm"]
metrics = ["dep:metrics", "dep:metrics-exporter-prometheus", "dep:prometheus"]
containers = ["docker"]
docker = ["bollard", "oci-spec"]
monitoring = ["metrics"]
ml-performance = []
distributed-tracing = ["tracing", "tracing-subscriber"]
nix = ["dep:nix"]
flox = []

[target.'cfg(unix)'.dependencies]
users = { version = "0.11", optional = true }
nix = { version = "0.27.0", optional = true }

[dev-dependencies]
tokio-test = "0.4"
pretty_assertions = "1.4"
test-case = "3.3"
tempfile = "3.8"

[[bin]]
name = "forge"
path = "src/main.rs"

[[test]]
name = "integration_tests"
path = "tests/integration_tests.rs"
harness = true

[profile.dev]
opt-level = 0
debug = true

[profile.release]
opt-level = 3
lto = true
codegen-units = 1

[profile.test]
opt-level = 1
debug = true
